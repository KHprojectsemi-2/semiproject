/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-29 16:47:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <title>Bootstrap Example</title>\r\n  <meta charset=\"utf-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n  <style>\r\n  /* Make the image fully responsive */\r\n  .carousel-inner img {\r\n      width: 100%;\r\n      height: 100%;\r\n      background-size : cover;\r\n  }\r\n  \r\n  .owl{\r\n\t\twidth : 400px;\r\n\t\theight: 300px;\r\n\t\talign : center;\r\n\t\tborder : 1px solid black;\r\n\t\tdisplay : inline-block;\r\n\t}\r\n\t.owl img{\r\n\t\twidth : 100%;\r\n\t\theight : 100%;\r\n\t\tbackground-size : cover;\r\n\t}\r\n  </style>\r\n</head>\r\n<body>\r\n\r\n<div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\" style = \"width : 1400px; height : 300px\">\r\n");
      out.write("\r\n  <!-- Indicators -->\r\n  <ul class=\"carousel-indicators\">\r\n    <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\r\n    <li data-target=\"#demo\" data-slide-to=\"1\"></li>\r\n    <li data-target=\"#demo\" data-slide-to=\"2\"></li>\r\n  </ul>\r\n  \r\n  <!-- The slideshow -->\r\n ");
      out.write("\r\n    \r\n    <div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\" style = \" display : inline-block; width : 400px; height : 300px\">\r\n\t\t\t  <!-- Indicators -->\r\n\t\t\t  <ul class=\"carousel-indicators\">\r\n\t\t\t    <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\r\n\t\t\t    <li data-target=\"#demo\" data-slide-to=\"1\"></li>\r\n\t\t\t    <li data-target=\"#demo\" data-slide-to=\"2\"></li>\r\n\t\t\t  </ul>\r\n\t\t\t  \r\n\t\t\t  <!-- The slideshow -->\r\n\t\t\t   <div class=\"carousel-inner\" style = \"display : inline-block; width : 400px; height : 300px\">\r\n\t\t\t    <div class=\"carousel-item active\" style = \"width : 400px; height : 300px\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog1.jpg\" alt=\"Los Angeles\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t    <div class=\"carousel-item\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog2.jpg\" alt=\"Chicago\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t    <div class=\"carousel-item\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog3.jpg\" alt=\"New York\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"carousel-inner\" style = \"display : inline-block; width : 400px; height : 300px\">\r\n\t\t\t    <div class=\"carousel-item active\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog1.jpg\" alt=\"Los Angeles\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t    <div class=\"carousel-item\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog2.jpg\" alt=\"Chicago\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t    <div class=\"carousel-item\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog3.jpg\" alt=\"New York\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"carousel-inner\" style = \"display : inline-block; width : 400px; height : 300px\">\r\n\t\t\t    <div class=\"carousel-item active\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog1.jpg\" alt=\"Los Angeles\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t    <div class=\"carousel-item\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog2.jpg\" alt=\"Chicago\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t    <div class=\"carousel-item\" style = \"display : inline-block;\">\r\n\t\t\t      <img src=\"");
      out.print(request.getContextPath());
      out.write("/mainViewImg/dog3.jpg\" alt=\"New York\" width=\"400px\" height=\"300px\">\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t  <!-- Left and right controls -->\r\n\t\t\t  <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\r\n\t\t\t    <span class=\"carousel-control-prev-icon\"></span>\r\n\t\t\t  </a>\r\n\t\t\t  <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\r\n\t\t\t    <span class=\"carousel-control-next-icon\"></span>\r\n\t\t\t  </a>\r\n\t\t</div>\r\n    \r\n    \r\n  </div>\r\n  \r\n  <!-- Left and right controls -->\r\n  <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\r\n    <span class=\"carousel-control-prev-icon\"></span>\r\n  </a>\r\n  <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\r\n    <span class=\"carousel-control-next-icon\"></span>\r\n  </a>\r\n</div>\r\n\t\t");
      out.write("\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
