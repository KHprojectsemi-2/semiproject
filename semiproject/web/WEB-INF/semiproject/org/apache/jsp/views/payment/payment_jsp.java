/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-29 08:05:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.payment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"UTF-8\">\r\n<title>결제</title>\r\n<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\r\n<script type=\"text/javascript\" src=\"https://service.iamport.kr/js/iamport.payment-1.1.2.js\"></script>\r\n\r\n</head>\r\n<body>\r\n\r\n<script>\r\n\t$(function(){\r\n\r\n\t\tvar IMP = window.IMP; // 생략가능\r\n\t\tIMP.init('imp43659263'); // 'iamport' 대신 부여받은 \"가맹점 식별코드\"를 사용\r\n\t\t\r\n\t\tIMP.request_pay({\r\n\t\t    pg : 'inicis', // version 1.1.0부터 지원.\r\n\t\t    pay_method : 'card',\r\n\t\t    merchant_uid : 'merchant_' + new Date().getTime(),\r\n\t\t    name : '펫트라슈',\t// 이거는 상품명 들어와야되는데 그냥 조 이름으로 집어넣었고\r\n\t\t    amount : 100,\t//여기는 원래 입력된 가격들어와야되는데 일단 100원으로 고정하게할꺼\r\n\t\t    buyer_email: \"yjh0433@naver.com\",\r\n\t\t    buyer_name : '구매자이름',\t//여기가 결제한 사람이름\r\n\t\t    buyer_tel : '010-1234-5678',\t// 결제한 사람 번호\r\n\t\t    buyer_addr : '서울특별시 강남구 삼성동',\t// 결제한 사람 주소\r\n\t\t}, function(rsp) {\r\n\t\t    if ( rsp.success ) {\r\n\t\t    \t// 여기서 전에서 받아온 유저나 펫시터 정보 얻어와서 결체 처리후 받아온걸 이구간에서 서블릿으로 넘겨주자\r\n\t\t        var msg = '결제가 완료되었습니다. 메인화면으로 이동합니다.';\r\n");
      out.write("\r\n\t\t        alert(msg);\r\n\t\t        location.href = '");
      out.print(request.getContextPath());
      out.write("/index.jsp';\r\n\t\t    } else {\r\n\t\t        var msg = '결제에 실패하였습니다.';\r\n\t\t        msg += '에러내용 : ' + rsp.error_msg;\r\n\t\t        alert(msg);\r\n\t\t        // 여기도 결제 취소했을때 이동할 경로\r\n\t\t    }\r\n\t\t});\r\n\t});\r\n\t\r\n</script>\r\n\r\n\r\n</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
