DROP TABLE SUSER CASCADE CONSTRAINTS;
DROP TABLE PET CASCADE CONSTRAINTS;
DROP TABLE PETSITTER CASCADE CONSTRAINTS;
DROP TABLE MATCHING CASCADE CONSTRAINTS;
DROP TABLE DIARY CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE QUESTION_BOARD CASCADE CONSTRAINTS;
DROP TABLE REPORT_BOARD CASCADE CONSTRAINTS;
DROP TABLE BBS CASCADE CONSTRAINTS;
DROP TABLE RCOMMENT CASCADE CONSTRAINTS;
DROP TABLE BBS_STATUS CASCADE CONSTRAINTS;
DROP TABLE REPORT CASCADE CONSTRAINTS;
DROP TABLE JOINATTACH CASCADE CONSTRAINTS;

--CASCADE TABLE SUSER;
--TRUNCATE TABLE PETSITTER;
--TRUNCATE TABLE PET;
--TRUNCATE TABLE MATCHING;
--TRUNCATE TABLE DIARY;
--TRUNCATE TABLE BOARD;
--TRUNCATE TABLE QUESTION_BOARD;
--TRUNCATE TABLE REPORT_BOARD;
--TRUNCATE TABLE BBS;
--TRUNCATE TABLE RCOMMENT;
--TRUNCATE TABLE BBS_STATUS;

DROP SEQUENCE SEQ_USERNO;
DROP SEQUENCE SEQ_PETNO;
DROP SEQUENCE SEQ_BOARDNO;
DROP SEQUENCE SEQ_BBSNO;
DROP SEQUENCE SEQ_COMNO;
DROP SEQUENCE SEQ_DIARYNO;
DROP SEQUENCE SEQ_MATCHNO;
DROP SEQUENCE SEQ_REPORTNO;
DROP SEQUENCE SEQ_FILENO;


CREATE SEQUENCE SEQ_USERNO;
CREATE SEQUENCE SEQ_PETNO;
CREATE SEQUENCE SEQ_BOARDNO;
CREATE SEQUENCE SEQ_BBSNO;
CREATE SEQUENCE SEQ_COMNO;
CREATE SEQUENCE SEQ_DIARYNO;
CREATE SEQUENCE SEQ_MATCHNO;
CREATE SEQUENCE SEQ_REPORTNO;
CREATE SEQUENCE SEQ_FILENO;

-- 관리자쪽에서 문의 내용 보여줄때 정렬관련 필요한 시퀀스
create sequence SEQ_QBOARDNO;

-- 관리자쪽에서 신고 목록 게시판 정렬에 필요한 시퀀스
create sequence SEQ_RBOARDNO;

CREATE TABLE SUSER (
   userId   VARCHAR2(20)      NOT NULL,
   userNo   NUMBER      NULL,
    userPwd   VARCHAR2(20)      NOT NULL,
   userName   VARCHAR2(20)      NOT NULL,
    userGender VARCHAR2(1)  DEFAULT 'M' NOT NULL,
    userEmail   VARCHAR2(100)      NOT NULL,
   userBirth   DATE      DEFAULT SYSDATE NOT NULL,
   userPhone   VARCHAR2(30)      NOT NULL,
   userPostcode VARCHAR2(20)    NOT NULL,
   userAddress   VARCHAR2(255)      NOT NULL,
   userImage   VARCHAR2(255)      NULL,
   reported   NUMBER   DEFAULT 0 NULL,
   joinDate   DATE   DEFAULT SYSDATE   NOT NULL,
   latestDate   DATE   DEFAULT SYSDATE   NULL,
   userStatus   VARCHAR2(1)   DEFAULT 'Y'   NULL,
   stopDate    DATE     DEFAULT NULL  NULL
);

INSERT INTO SUSER VALUES('admin',SEQ_USERNO.NEXTVAL,'admin','관리자',DEFAULT,'admin@or.kr',SYSDATE,'01011112222','10240','서울시 서울구 서울동',NULL,DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT);
INSERT INTO SUSER VALUES('user1',SEQ_USERNO.NEXTVAL,'user1','유저1',DEFAULT,'user1@or.kr',SYSDATE,'01022223424','11242','강원시 강원구 강원동',NULL,DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT);
INSERT INTO SUSER VALUES('user2',SEQ_USERNO.NEXTVAL,'user2','유저2',DEFAULT,'user2@or.kr',SYSDATE,'01025738324','646462','강원도 동해시 천곡동',NULL,DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT);
INSERT INTO SUSER VALUES('user3',SEQ_USERNO.NEXTVAL,'user3','유저3',DEFAULT,'user3@or.kr',SYSDATE,'01025738324','646462','강원도 동해시 천곡동',NULL,DEFAULT,DEFAULT,DEFAULT,'S',DEFAULT);
INSERT INTO SUSER VALUES('test1',SEQ_USERNO.NEXTVAL,'test1','테스트1',DEFAULT,'TEST1@or.kr',SYSDATE,'01038729481','646462','강원도 동해시 천곡동',NULL,DEFAULT,DEFAULT,DEFAULT,'S',DEFAULT);
INSERT INTO SUSER VALUES('test2',SEQ_USERNO.NEXTVAL,'test2','테스트2',DEFAULT,'TEST2@or.kr',SYSDATE,'01038729481','646462','강원도 동해시 천곡동',NULL,DEFAULT,DEFAULT,DEFAULT,'N',DEFAULT);

CREATE TABLE REPORT(
	reportNo NUMBER NOT NULL,
	userId   VARCHAR2(20) NOT NULL,
	reportMsg VARCHAR2(1000) NOT NULL,
    status VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE JOINATTACH(
   
    fileNo NUMBER NOT NULL,
    category VARCHAR2(12) DEFAULT 'INFO' NOT NULL,
    originName	VARCHAR2(255) NOT NULL,
    changeName	VARCHAR2(255) NOT NULL,
    filePath	VARCHAR2(1000) NOT NULL,
    uploadDate	DATE    DEFAULT SYSDATE NOT NULL,
    fileLevel	NUMBER  NULL,
    status	VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE PETSITTER (
   userId   VARCHAR2(16)      NOT NULL,
   grade   NUMBER      NULL,
   residence   VARCHAR2(10)      NOT NULL,
   job   VARCHAR2(15)      NOT NULL,
   withFam   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   withPet   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   canLarge   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   canMedic   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   canOld   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   canSick   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   isLicense   VARCHAR(1)   DEFAULT 'N'   NOT NULL,
   chkResume   VARCHAR(1)   DEFAULT 'N'   NULL
);

CREATE TABLE PET (
   petNo   NUMBER      NOT NULL,
   userId   VARCHAR2(12)      NOT NULL,
   petName   VARCHAR2(12)      NOT NULL,
   petWeight   VARCHAR2(12)      NOT NULL,
   petImage   VARCHAR2(255)      NULL,
   petKind   VARCHAR2(20)      NULL,
   petGender   VARCHAR(1)      NOT NULL,
   isNeutral   VARCHAR(1)   DEFAULT 'N'   NULL,
   petAge   NUMBER      NOT NULL,
   petMatch VARCHAR2(1) DEFAULT 'N' NOT NULL
);


CREATE TABLE DIARY (
   diaryNo   NUMBER      NOT NULL,
   matchNo   NUMBER      NOT NULL,
   diaryContent   VARCHAR2(4000)      NOT NULL,
   diaryImage   VARCHAR2(40)      NULL,
   isToilet   VARCHAR(1)      NULL,
   isWalk   VARCHAR(1)      NULL,
   isMedic   VARCHAR(1)      NULL,
   chkNeeds   VARCHAR(1)      NULL,
   review   VARCHAR2(2000)      NULL,
   grade   NUMBER      NULL,
   diaryStatus   VARCHAR(1)   DEFAULT 'Y'   NULL
);

CREATE TABLE MATCHING (
   matchNo   NUMBER      NOT NULL,
   sitterId   VARCHAR2(12)      NULL,
   userId   VARCHAR2(12)      NULL,
   isHome   VARCHAR(1)      NOT NULL,
   careDate   DATE      NULL,
   price   NUMBER(10)      NOT NULL,
    wantToSay VARCHAR2(100)    NULL,
    Special_Note VARCHAR2(100) NULL,
    Thumbnail VARCHAR2(1000)  NULL,
   regStatus   VARCHAR(1)   DEFAULT '1'   NULL,
    isrest VARCHAR(1) NOT NULL,
    countPet number NULL
);

1 - 글만올린거 // 2 - 매칭중이지만 결제미완료 // 3- 매칭중이고, 결제완료 // 4 - 매칭종료 // 5 - 삭제

CREATE TABLE BBS (
   bbsNo   NUMBER      NOT NULL,
   userId   VARCHAR2(16)      NOT NULL,
   bbs_flag   NUMBER      NOT NULL,
   name   VARCHAR2(12)      NULL,
   title   VARCHAR2(100)      NOT NULL,
   content   VARCHAR2(4000)      NOT NULL,
   readCount   NUMBER      NULL,
   writeDate   DATE   DEFAULT SYSDATE   NULL,
   rewriteDate   DATE   DEFAULT SYSDATE   NULL,
   attachCount   NUMBER      NULL,
   attach_flag   NUMBER      NULL,
   deleteDate   DATE      NULL,
   deleteMemo   VARCHAR2(400)      NULL,
   bbsStatus   VARCHAR(1)   DEFAULT 'Y'   NULL
);

CREATE TABLE RCOMMENT (
   commentNo   NUMBER      NOT NULL,
   bbsNo   NUMBER      NOT NULL,
   comment   VARCHAR2(100)      NOT NULL,
   comment_flag   VARCHAR(1)      NULL,
   comment_fid   NUMBER      NULL,
   comment_cid   NUMBER      NULL,
   user_id   VARCHAR2(16)      NOT NULL,
   deleteDate   DATE      NULL,
   deleteMemo   VARCHAR2(400)      NULL,
   comStatus   VARCHAR(1)      NULL
);

-- FAQ게시판
CREATE TABLE BOARD (
   boardNo   NUMBER      NOT NULL,
   userId   VARCHAR2(12)      NOT NULL,
   boardType   VARCHAR2(20)      NOT NULL,
   title   VARCHAR2(100)      NULL,
   content   VARCHAR2(4000)      NULL,
   create_date   DATE   DEFAULT SYSDATE   NULL,
   boardStatus   VARCHAR(1) DEFAULT 'Y'     NULL
);

-- 문의하기 게시판 
CREATE TABLE QUESTION_BOARD (
   boardNo   NUMBER      NOT NULL,
   userId   VARCHAR2(12)      NOT NULL,
   boardType   VARCHAR2(20)       NOT NULL,
   title   VARCHAR2(100)      NULL,
   content   VARCHAR2(4000)      NULL,
   create_date   DATE   DEFAULT SYSDATE   NULL,
   boardStatus   VARCHAR(1) DEFAULT 'Y'     NULL,
   re_content   VARCHAR2(4000)     NULL,
   category   VARCHAR2(100)     NULL,
   re_boardStatus VARCHAR2(1)   DEFAULT 'N' NULL
);

-- 신고하기 게시판
CREATE TABLE REPORT_BOARD (
    boardNo   NUMBER      NOT NULL,
   userId   VARCHAR2(12)      NOT NULL,
   boardType   VARCHAR2(20)      NOT NULL,
   title   VARCHAR2(100)      NULL,
   content   VARCHAR2(4000)      NULL,
   create_date   DATE   DEFAULT SYSDATE   NULL,
   boardStatus   VARCHAR(1) DEFAULT 'Y'     NULL,
   repUser   VARCHAR2(12)      NOT NULL,
   repType   VARCHAR2(12)    NOT NULL,
   repStatus   VARCHAR(1)  DEFAULT 'N'    NULL
);


CREATE TABLE BBS_STATUS (
   bbsNo   NUMBER      NOT NULL,
   userId   VARCHAR2(16)      NOT NULL,
   writerId   VARCHAR2(16)      NOT NULL,
   readDate   DATE   DEFAULT SYSDATE   NOT NULL,
   status   VARCHAR(1)   DEFAULT 'N'   NOT NULL
);

ALTER TABLE SUSER ADD CONSTRAINT PK_SUSER PRIMARY KEY (
   userId
);

ALTER TABLE PETSITTER ADD CONSTRAINT PK_PETSITTER PRIMARY KEY (
   userId
);

ALTER TABLE PET ADD CONSTRAINT PK_PET PRIMARY KEY (
   petNo
);

ALTER TABLE DIARY ADD CONSTRAINT PK_DIARY PRIMARY KEY (
   diaryNo
);

ALTER TABLE MATCHING ADD CONSTRAINT PK_MATCHING PRIMARY KEY (
   matchNo
);

ALTER TABLE BBS ADD CONSTRAINT PK_BBS PRIMARY KEY (
   bbsNo
);

ALTER TABLE RCOMMENT ADD CONSTRAINT PK_RCOMMENT PRIMARY KEY (
   commentNo
);

ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (
   boardNo
);

ALTER TABLE QUESTION_BOARD ADD CONSTRAINT PK_QUESTION_BOARD PRIMARY KEY (
   boardNo
);

ALTER TABLE REPORT_BOARD ADD CONSTRAINT PK_REPORT_BOARD PRIMARY KEY (
   boardNo
);

ALTER TABLE REPORT ADD CONSTRAINT PK_REPORT PRIMARY KEY (
   reportNo
);

ALTER TABLE JOINATTACH ADD CONSTRAINT PK_JOINATTACH PRIMARY KEY (
   fileNo
);


ALTER TABLE PETSITTER ADD CONSTRAINT FK_SUSER_TO_PETSITTER_1 FOREIGN KEY (
   userId
)
REFERENCES SUSER (
   userId
);

ALTER TABLE QUESTION_BOARD ADD CONSTRAINT FK_BOARD_TO_QUESTION_BOARD_1 FOREIGN KEY (
   boardNo
)
REFERENCES BOARD (
   boardNo
);

ALTER TABLE REPORT_BOARD ADD CONSTRAINT FK_BOARD_TO_REPORT_BOARD_1 FOREIGN KEY (
   boardNo
)
REFERENCES BOARD (
   boardNo
);


-- FAQ게시판 정렬관련 뷰
CREATE OR REPLACE VIEW BOARD_LIST AS
SELECT ROWNUM RNUM, A.* FROM( SELECT BOARDNO, USERID, BOARDTYPE, TITLE, CONTENT, CREATE_DATE, BOARDSTATUS
FROM BOARD 
WHERE BOARDSTATUS='Y'
ORDER BY BOARDNO DESC) A;

-- 문의하기 관련 뷰
CREATE OR REPLACE VIEW QBOARD_LIST AS
SELECT ROWNUM RNUM, A.* FROM( SELECT *
FROM QUESTION_BOARD 
WHERE BOARDSTATUS='Y'
ORDER BY BOARDNO DESC) A;

-- 신고하기 관련 뷰
CREATE OR REPLACE VIEW RBOARD_LIST AS
SELECT ROWNUM RNUM, A.* FROM( SELECT *
FROM REPORT_BOARD 
WHERE BOARDSTATUS='Y'
ORDER BY CREATE_DATE DESC) A;